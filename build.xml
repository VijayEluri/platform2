
<project default="jar" basedir=".">

	
  <!-- =================================================================== -->
  <!-- Initialization target                                               -->
  <!-- =================================================================== -->
  <target name="init">
    <tstamp/>
    <buildnumber/>
    <property file="global.properties"/>
    
    <property name="buildnum" value="${build.number}"/>
    <property name="buildversion" value="${version}_${buildnum}"/>


    <echo message="      ------------------- ${Name} ${version} [${year}] ---------"/>

    <property name="build.compiler" value="modern"/>
    <property name="debug" value="on"/>
    <property name="optimize" value="on"/>
    <property name="deprecation" value="off"/>
    <property name="dependencies" value="yes" />    


    <property name="lib.dir" value="./lib"/>
    <property name="docs.dir" value="./xdocs"/>
    <property name="dtd.dir" value="./xdocs/dtd"/>
    <property name="skins.dir" value="./skins"/>
    <property name="images.dir" value="./xdocs/images"/>
    <property name="samples.dir" value="./samples"/>

    <property name="packages" value="com.idega.*,is.idega.*,is.idegaweb.*"/>

    <property name="iweplatformpackages" value="com.idega.presentation.*,com.idega.core.*,com.idega.idegaweb.*,com.idega.data.*,com.idega.util.*,com.idega.business.*,com.idega.user.*,com.idega.builder.*,com.idega.event.*,com.idega.io.*,com.idega.graphics.*,com.idega.development.*,com.idega.exception.*,com.idega.servlet.*,com.idega.repository.*,com.idega.style.*,com.idega.transaction.*,com.idega.versioncontrol.*,com.idega.xml.*,com.idega.block.news.*,com.idega.block.text.*,com.idega.block.navigation.*,com.idega.block.media.*,com.idega.block.login.*,com.idega.block.entity.*,com.idega.block.category.*,com.idega.block.image.*" />
  	<property name="iweplatformset" value="com/idega/presentation/**,com/idega/core/**,com/idega/idegaweb/**,com/idega/data/**,com/idega/util/**,com/idega/business/**,com/idega/user/**,com/idega/builder/**,com/idega/event/**,com/idega/io/**,com/idega/graphics/**,com/idega/development/**,com/idega/exception/**,com/idega/servlet/**,com/idega/repository/**,com/idega/style/**,com/idega/transaction/**,com/idega/versioncontrol/**,com/idega/xml/**,com/idega/block/news/**,com/idega/block/text/**,com/idega/block/navigation/**,com/idega/block/media/**,com/idega/block/login/**,com/idega/block/entity/**,com/idega/block/category/**,com/idega/block/image/**" />
  		
    <property name="iwblockspackages" value="com.idega.block.*" />
    <property name="iwcommunepackages" value="se.idega.idegaweb.commune.*,se.cubecon.bun24.*" />
    <property name="iwmemberpackages" value="is.idega.idegaweb.member.*" />


	<!--property name="cvsroot" value=":pserver:tryggvil@einstein.idega.is:/idega/cvs"/-->
	
    <property name="browser.skin" value="${skins.dir}/xml.apache.org/"/>
    <property name="printer.skin" value="${skins.dir}/printer/"/>
    <property name="doc.generator" value="org.apache.stylebook.StyleBook"/>
    <property name="doc.generator.package" value="${lib.dir}/stylebook-1.0-b2.jar"/>

    <property name="build.dir" value="./local/build"/>
    <property name="build.jar.dir" value="${build.dir}/jar"/>
    <property name="build.src" value="${build.dir}/src"/>
    <property name="build.dest" value="${build.dir}/classes"/>
    <property name="build.docs" value="${build.dir}/docs"/>
    <property name="build.docs.printer" value="${build.dir}/printer-docs"/>
    
  	<property name="build.webapps.src" value="${build.dir}/webapps-src"/>
  	<property name="build.webapps.dest" value="${build.dir}/webapps"/>
  	<property name="build.war.dir" value="${build.dir}/wars"/>
  	
  	<property name="build.jar.eplatform.file" value="${build.jar.dir}/${filename}-eplatform.jar" />
  	
	<property name="build.tag" value="${release_tag}"/>
    

    <property name="build.eplatform.javadocs" value="${build.dir}/javadocs/eplatform"/>
    <property name="build.blocks.javadocs" value="${build.dir}/javadocs/blocks"/>
    <property name="build.commune.javadocs" value="${build.dir}/javadocs/commune"/>
    <property name="build.member.javadocs" value="${build.dir}/javadocs/member"/>   
 
    <property name="dist.root" value="./dist"/>
    <property name="dist.dir" value="${dist.root}/${name}-${version}"/>
    <property name="site" value="../xml-site/targets/cocoon"/>

    <available property="xt.present" classname="com.jclark.xsl.sax.XSLProcessor"/>
    <available property="fesi.present" classname="FESI.jslib.JSGlobalObject"/>
    <available property="jndi.present" classname="javax.naming.Name"/>
    <available property="projectx.present" classname="com.sun.xml.parser.Parser"/>

    <filter token="year" value="${year}"/>
    <filter token="version" value="${version}"/>
    <filter token="date" value="${TODAY}"/>
    <filter token="log" value="true"/>
    <filter token="verbose" value="true"/>
  </target>

  <!-- =================================================================== -->
  <!-- Help on usage                                                       -->
  <!-- =================================================================== -->
  <target name="usage">
    <echo message=""/>
    <echo message=""/>
    <echo message="idegaWeb Build file"/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=" available targets are:"/>
    <echo message=""/>
    <echo message="   package      --> generates the cocoon.jar file (default)"/>
    <echo message="   compile      --> compiles the source code"/>
    <echo message="   docs         --> generates the HTML documentation"/>
    <echo message="   printer-docs --> generates printer-friendly HTML documentation"/>
    <echo message="   javadocs     --> generates the API documentation (java 1.2 only)"/>
    <echo message="   dist-zip     --> generates the Cocoon distribution as .zip"/>
    <echo message="   dist-tgz     --> generates the Cocoon distribution as .tar.gz"/>
    <echo message="   clean        --> cleans up the directory"/>
    <echo message="   site         --> generates the Cocoon web site"/>
    <echo message=""/>
    <echo message=" See the comments inside the build.xml file for more details."/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=""/>
  </target>

  <!-- =================================================================== -->
  <!-- Prepares the directories                                            -->
  <!-- =================================================================== -->
  <target name="prepare" depends="init">
    <mkdir dir="${build.dir}"/>
    
    <!-- create directories -->
    <!--<delete dir="${build.dest}" /> -->

    <delete dir="${build.src}" />
    <delete dir="${build.dest}" />
    
    <mkdir dir="${build.src}"/>
    <mkdir dir="${build.dest}"/>
    
  </target>

  <target name="prepare-cvs-com" depends="init">
    <cvs cvsRoot="${cvsroot}"
             package="com"
             dest="${build.src}"
		tag="${build.tag}"
             />
  </target>

		
  <target name="prepare-cvs-is" depends="init">
    <cvs cvsRoot="${cvsroot}"
             package="is"
             dest="${build.src}"
		tag="${build.tag}"
             />
  </target>


  <target name="prepare-cvs-se" depends="init">
    <cvs cvsRoot="${cvsroot}"
             package="se"
             dest="${build.src}"
		tag="${build.tag}"
             />
  </target>


  <target name="prepare-cvs-campus" depends="init">
    <cvs cvsRoot="${cvsroot}"
             package="is.idega.idegaweb.campus"
             dest="${build.src}"
		tag="{release.tag}"
             />
  </target>

  <target name="prepare-cvs" depends="prepare-cvs-com,prepare-cvs-is,prepare-cvs-se"  />

  <!-- =================================================================== -->
  <!-- Prepares the source code                                            -->
  <!-- =================================================================== -->
  <target name="prepare-src" depends="prepare,prepare-cvs">


  </target>


  <!-- =================================================================== -->
  <!-- Compiles the source directory                                       -->
  <!-- =================================================================== -->
  <target name="compile" depends="prepare-src">
    <javac srcdir="${build.src}"
           fork="yes"
           memoryMaximumSize="768M"
           destdir="${build.dest}"
           debug="${debug}"
           optimize="${optimize}"
			encoding="ISO-8859-1"
			target="1.4"
			source="1.4" >
        <classpath>
	      <fileset dir="${lib.dir}">
	        <include name="**/*.jar"/>
	      </fileset>
  	      <fileset dir="${lib.dir}/ext">
  	        <include name="**/*.jar"/>
  	      </fileset>
        </classpath>
    	</javac>
  </target>

    <target name="classes" depends="compile">
    <delete dir="${build.src}" />
    </target>


  <!-- =================================================================== -->
  <!-- Creates the class package                                           -->
  <!-- =================================================================== -->
	<target name="jar" depends="compile,package">
     </target> 


	  <!-- =================================================================== -->
	  <!-- Creates the manifest for the jar                                    -->
	  <!-- =================================================================== -->
	  <target name="manifest" depends="init">
	          <manifest file="MANIFEST.MF">
	            <attribute name="Built-By" value="${user.name}"/>
	            <section name="com/idega/core/">
	              <attribute name="Specification-Title" value="${Name}" />
	              <attribute name="Specification-Version" value="${version}" />
	              <attribute name="Specification-Vendor" value="${vendor}" />
	              <attribute name="Implementation-Title" value="${name}" />
	              <attribute name="Implementation-Version" value="${buildversion}" />
	              <attribute name="Implementation-Vendor" value="${vendor}" />
	                <attribute name="Build-Number" value="${buildnum}" />
	            </section>
	          </manifest>
	  </target>

	 <target name="package-prepare" depends="init">
		<mkdir dir="${build.jar.dir}"/>
	 </target>
	
	  <!-- =================================================================== -->
	  <!-- Creates the class package                                           -->
	  <!-- =================================================================== -->
	  <target name="package" depends="package-all,package-com,package-is,package-com-is,package-addon,package-com-is-noschool,package-addon-noschool,package-core,package-eplatform,package-allblocks,package-se,package-tools">
	  
	  </target> 
	  
	  <target name="package-all" depends="package-prepare,manifest">
	    <jar jarfile="${build.jar.dir}/${filename}-all-${buildnum}.jar" manifest="MANIFEST.MF" 
	         basedir="${build.dest}"/>
	  </target>
	  
	  <target name="package-core" depends="init" >
	    <jar jarfile="${build.jar.dir}/${filename}-core.jar" manifest="MANIFEST.MF">
	        <fileset dir="${build.dest}"
	                includes="com/**"
	                excludes="com/idega/block/**,com/idega/projects/**,com/idega/jmodule/**,com/idega/development/**"
	        />
	     </jar>
	  </target>
	  

	  <target name="package-com" depends="init">
	    <jar jarfile="${build.jar.dir}/${filename}-com.jar" manifest="MANIFEST.MF">
	        <fileset dir="${build.dest}"
	                includes="com/**"
	        />
	     </jar>
	  </target>

	  <target name="package-is" depends="init">
	    <jar jarfile="${build.jar.dir}/${filename}-is.jar" manifest="MANIFEST.MF">
	        <fileset dir="${build.dest}"
	                includes="is/**"
	        />
	     </jar>
	  </target>
	
	  <target name="package-com-is" depends="init">
	    <jar jarfile="${build.jar.dir}/${filename}-com-is.jar" manifest="MANIFEST.MF">
	        <fileset dir="${build.dest}"
	                includes="com/**,is/**"
	        />
	     </jar>
	  </target>

	  <target name="package-com-is-noschool" depends="init">
	    <jar jarfile="${build.jar.dir}/${filename}-com-is-noschool.jar" manifest="MANIFEST.MF">
	        <fileset dir="${build.dest}"
	                includes="com/**,is/**"
			excludes="com/idega/block/school/**"
	        />
	     </jar>
	  </target>

	  <target name="package-se" depends="init">
	    <jar jarfile="${build.jar.dir}/${filename}-se.jar" manifest="MANIFEST.MF">
	        <fileset dir="${build.dest}"
	                includes="se/**"
	        />
	     </jar>
	  </target>

	  <target name="package-tools" depends="init">
	    <jar jarfile="${build.jar.dir}/${filename}-tools.jar" manifest="MANIFEST.MF">
	        <fileset dir="${build.dest}"
	                includes="is/idega/tools/**"
	        />
	     </jar>
	  </target>

	  
	  <target name="package-allblocks" depends="init">
	    <jar jarfile="${build.jar.dir}/${filename}-allblocks.jar" manifest="MANIFEST.MF">
	        <fileset dir="${build.dest}"
	                includes="com/**"
	                excludes="com/idega/projects/**"
	        />
	     </jar>
	  </target>
	  
	   <target name="package-addon" depends="init">
	    <jar jarfile="${build.jar.dir}/${filename}-addon.jar" manifest="MANIFEST.MF">
	        <fileset dir="${build.dest}"
	                includes="com/idega/block/**"
	                excludes="${iweplatformset}"
	        />
	     </jar>
	  </target>
	
	   <target name="package-addon-noschool" depends="init">
	    <jar jarfile="${build.jar.dir}/${filename}-addon-noschool.jar" manifest="MANIFEST.MF">
	        <fileset dir="${build.dest}"
	                includes="com/idega/block/**"
	                excludes="${iweplatformset},com/idega/block/school/**"
	        />
	     </jar>
	  </target> 
	  
	  <target name="package-eplatform" depends="init">
	    <jar jarfile="${build.jar.eplatform.file}" manifest="MANIFEST.MF">
	        <fileset dir="${build.dest}"
	                includes="${iweplatformset}"
	        />
	     </jar>
		  </target>

	  <target name="package-travel" depends="init">
	    <jar jarfile="${build.jar.dir}/${filename}-is-travel.jar" manifest="MANIFEST.MF">
	        <fileset dir="${build.dest}"
	                includes="is/idega/idegaweb/travel/**, com/idega/block/trade/**, com/idega/block/tpos/**"
	        />
	     </jar>
		  </target>

	  <target name="package-campus" depends="init">
	    <jar jarfile="${build.jar.dir}/${filename}-is-campus.jar" manifest="MANIFEST.MF">
	        <fileset dir="${build.dest}"
	                includes="is/idega/idegaweb/campus/**"
	        />
	     </jar>
		  </target>

	  <target name="package-blocks-campus" depends="init">
	    <jar jarfile="${build.jar.dir}/${filename}-blocks-campus.jar" manifest="MANIFEST.MF">
	        <fileset dir="${build.dest}"
			includesfile="idegaweb-campus-blocks.pattern"
	        />
	     </jar>
	  </target>

  <!-- =================================================================== -->
  <!-- Prepares the docs                                                   -->
  <!-- =================================================================== -->
  <target name="prepare-docs" depends="init">
    <copyfile src="changes.xml" dest="${docs.dir}/changes.xml" filtering="on"/>
    <copyfile src="todo.xml" dest="${docs.dir}/todo.xml"/>

    <replace file="${docs.dir}/changes.xml" token="./xdocs/dtd/" value="dtd/"/>
    <replace file="${docs.dir}/todo.xml" token="./xdocs/dtd/" value="dtd/"/>

    <delete file="${docs.dir}/book.xml"/>
    <copyfile src="${docs.dir}/docs-book.xml" dest="${docs.dir}/book.xml" filtering="on"/>
  </target>

  <!-- =================================================================== -->
  <!-- Generate HTML docs                                                  -->
  <!-- =================================================================== -->
  <target name="docs" depends="prepare-docs">
    <mkdir dir="${build.docs}"/>
    <java fork="yes" classpath="${java.class.path}:${doc.generator.package}" classname="${doc.generator}"
          args="targetDirectory=${build.docs} ${docs.dir}/book.xml ${browser.skin}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Generate printer-friendly HTML docs                                 -->
  <!-- =================================================================== -->
  <target name="printer-docs" depends="prepare-docs">
    <mkdir dir="${build.docs.printer}"/>
    <java fork="yes" classpath="${java.class.path}:${doc.generator.package}" classname="${doc.generator}"
          args="targetDirectory=${build.docs.printer} ${docs.dir}/book.xml ${printer.skin}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the web site                                                -->
  <!-- =================================================================== -->
  <target name="site" depends="prepare-docs">
    <mkdir dir="${site}"/>
    <delete file="${docs.dir}/book.xml"/>
    <copyfile src="${docs.dir}/site-book.xml" dest="${docs.dir}/book.xml" filtering="on"/>
    <java fork="yes" classpath="${java.class.path}:${doc.generator.package}" classname="${doc.generator}"
          args="targetDirectory=${site} ${docs.dir}/book.xml ${browser.skin}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the API documentation                                       -->
  <!-- =================================================================== -->
 
  <target name="javadocs" depends="javadocs.core,javadocs.blocks,javadocs.commune,javadocs.member"/>
 

  <target name="javadocs.core" depends="prepare-src">
   <mkdir dir="${build.eplatform.javadocs}"/>
    <javadoc packagenames="${iweplatformpackages}"
             maxmemory="128M"
		sourcepath="${build.src}"
             destdir="${build.eplatform.javadocs}"
             author="true"
             version="true"
             use="false"
             noindex="true"
             windowtitle="${Name} ePlatform API Version ${buildversion}"
             doctitle="${Name} ePlatform API Version ${buildversion}"
             bottom="Copyright &#169; ${year} Idega Software. All Rights Reserved."
             stylesheetfile="${skins.dir}/javadoc.css"
      >
	<link href="http://support.idega.is/docs/eplatform"/>
        <link href="http://support.idega.is/docs/blocks" />
        <link href="http://java.sun.com/j2se/1.3/docs/api"/>
        <link href="http://java.sun.com/j2ee/sdk_1.3/techdocs/api"/>
    </javadoc>
</target>


  <target name="javadocs.blocks" depends="prepare-src">
   <mkdir dir="${build.blocks.javadocs}"/>
    <javadoc packagenames="${iwblockspackages}"
             maxmemory="128M"
		sourcepath="${build.src}"
             destdir="${build.blocks.javadocs}"
             author="true"
             version="true"
             use="false"
             noindex="true"
             windowtitle="${Name} Blocks API Version ${buildversion}"
             doctitle="${Name} Blocks API Version ${buildversion}"
             bottom="Copyright &#169; ${year} Idega Software. All Rights Reserved."
             stylesheetfile="${skins.dir}/javadoc.css"
      >
        <link href="http://support.idega.is/docs/eplatform"/>
        <link href="http://support.idega.is/docs/blocks" />
        <link href="http://java.sun.com/j2se/1.3/docs/api"/>
        <link href="http://java.sun.com/j2ee/sdk_1.3/techdocs/api"/>
    </javadoc>  
</target>


  <target name="javadocs.commune" depends="prepare-src">
   <mkdir dir="${build.commune.javadocs}"/>
    <javadoc packagenames="${iwcommunepackages}"
             maxmemory="128M"
                sourcepath="${build.src}"
             destdir="${build.commune.javadocs}"
             author="true"
             version="true"
             use="false"
             noindex="true"
             windowtitle="${Name} Commune Application API Version ${buildversion}"
             doctitle="${Name} Commune Application API Version ${buildversion}"
             bottom="Copyright &#169; ${year} Idega Software., AguraIT AB All Rights Reserved."
             stylesheetfile="${skins.dir}/javadoc.css"
      >
        <link href="http://support.idega.is/docs/eplatform"/>
        <link href="http://support.idega.is/docs/blocks" />
        <link href="http://java.sun.com/j2se/1.3/docs/api"/>
        <link href="http://java.sun.com/j2ee/sdk_1.3/techdocs/api"/>
    </javadoc>
</target>


  <target name="javadocs.member" depends="prepare-src">
   <mkdir dir="${build.member.javadocs}"/>
    <javadoc packagenames="${iwmemberpackages}"
             maxmemory="128M"
                sourcepath="${build.src}"
             destdir="${build.member.javadocs}"
             author="true"
             version="true"
             use="false"
             noindex="true"
             windowtitle="${Name} Member Application API Version ${buildversion}"
             doctitle="${Name} Member Application API Version ${buildversion}"
             bottom="Copyright &#169; ${year} Idega Software. All Rights Reserved."
             stylesheetfile="${skins.dir}/javadoc.css"
      >
        <link href="http://support.idega.is/docs/eplatform"/>
        <link href="http://support.idega.is/docs/blocks" />
        <link href="http://java.sun.com/j2se/1.3/docs/api"/>
        <link href="http://java.sun.com/j2ee/sdk_1.3/techdocs/api"/>
    </javadoc>
</target>




  <!-- =================================================================== -->
  <!-- Creates the distribution                                            -->
  <!-- =================================================================== -->
  <target name="dist" depends="package, docs, printer-docs, javadocs">
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${dist.dir}/bin"/>
    <mkdir dir="${dist.dir}/lib"/>
    <mkdir dir="${dist.dir}/src"/>
    <mkdir dir="${dist.dir}/conf"/>
    <mkdir dir="${dist.dir}/docs"/>
    <mkdir dir="${dist.dir}/docs/api"/>
    <mkdir dir="${dist.dir}/docs/printer"/>
    <mkdir dir="${dist.dir}/samples"/>
    <mkdir dir="${dist.dir}/skins"/>
    <mkdir dir="${dist.dir}/xdocs"/>

    <copy file="${build.src}" dest="${dist.dir}/src" excludes="cocoon.properties"/>
    <copyfile src="${build.src}/org/apache/cocoon/cocoon.properties" dest="${dist.dir}/conf/cocoon.properties"/>
    <copyfile src="${build.dir}/${name}.jar" dest="${dist.dir}/bin/${name}.jar"/>
    <copy file="${build.docs}" dest="${dist.dir}/docs"/>
    <copy file="${build.javadocs}" dest="${dist.dir}/docs/api"/>
    <copy file="${samples.dir}" dest="${dist.dir}/samples"/>
    <copy file="${build.docs.printer}" dest="${dist.dir}/docs/printer"/>
    <copy file="${docs.dir}" dest="${dist.dir}/xdocs" excludes="book.xml, changes.xml, todo.xml"/>
    <copy file="${docs.dir}" dest="${dist.dir}" includes="changes.xml, todo.xml"/>
    <copy file="${skins.dir}" dest="${dist.dir}/skins"/>
    <copy file="${lib.dir}" dest="${dist.dir}/lib"/>

    <copy src="." dest="${dist.dir}" includes="README, LICENSE, build.*, lcp.bat, index.html" filtering="on"/>

    <chmod perm="+x" file="${dist.dir}/build.sh"/>
    <fixcrlf srcdir="${dist.dir}" includes="build.sh" cr="remove"/>
    <fixcrlf srcdir="${dist.dir}" includes="build.bat" cr="add"/>
  </target>

  <!-- =================================================================== -->
  <!-- Packages the distribution as .zip                                   -->
  <!-- =================================================================== -->
  <target name="dist-zip" depends="dist">
    <zip zipfile="${Name}-${version}.zip" basedir="${dist.root}" includes="**"/>
  </target>

  <!-- =================================================================== -->
  <!-- Packages the distribution with .tar.gzip                            -->
  <!-- =================================================================== -->
  <target name="dist-tgz" depends="dist">
    <tar tarfile="${Name}-${version}.tar" basedir="${dist.root}" includes="**"/>
    <gzip zipfile="${Name}-${version}.tar.gz" src="${Name}-${version}.tar"/>
  </target>

  <!-- =================================================================== -->
  <!-- Clean targets                                                       -->
  <!-- =================================================================== -->
  <target name="clean" depends="init">
    <deltree dir="${build.dir}"/>
    <delete file="${docs.dir}/changes.xml"/>
    <delete file="${docs.dir}/todo.xml"/>
    <delete file="${docs.dir}/book.xml"/>
  </target>

  <target name="distclean" depends="clean">
    <deltree dir="${dist.root}"/>
    <delete file="${Name}-${version}.tar.gz"/>
    <delete file="${Name}-${version}.tar"/>
    <delete file="${Name}-${version}.zip"/>
  </target>
  
  <target name="pepare-war" depends="init">
  	<mkdir dir="${build.war.dir}"/>
  </target>
	
  <target name="prepare-war-eplatform" depends="pepare-war">
  	<property name="build.webapp.eplatform.src" value="${build.webapps.src}/webapps/base"/>
  	<property name="build.webapp.eplatform.dest" value="${build.webapps.dest}/eplatform"/>
  	<cvs cvsRoot="${cvsroot}"
             package="webapps/base"
             dest="${build.webapps.src}"
			tag="${build.tag}"
             />
  </target>

  <target name="war-eplatform" depends="prepare-war-eplatform">
  	<copydir dest="${build.webapp.eplatform.dest}" src="${build.webapp.eplatform.src}"/>
  	<copydir dest="${build.webapp.eplatform.dest}/WEB-INF/lib" src="${lib.dir}"/>
  	<copy file="${build.jar.eplatform.file}" todir="${build.webapp.eplatform.dest}/WEB-INF/lib" />
  	<copy file="${lib.dir}/misc/hsqldb.jar" todir="${build.webapp.eplatform.dest}/WEB-INF/lib" />
  	<property name="build.webapp.eplatform.dest" value="${build.webapps.dest}/eplatform"/>
    <war webxml="${build.webapp.eplatform.dest}/WEB-INF/web.xml" warfile="${build.war.dir}/eplatform2.war"
         basedir="${build.webapp.eplatform.dest}"/>
  </target>
	
  <target name="war" depends="war-eplatform"/>
	
</project>

<!-- End of file -->
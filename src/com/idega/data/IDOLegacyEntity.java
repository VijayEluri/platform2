package com.idega.data;

/**
 * Title:        idegaclasses
 * Description:
 * Copyright:    Copyright (c) 2001
 * Company:      idega
 * @author <a href="tryggvi@idega.is">Tryggvi Larusson</a>
 * @version 0.5 UNFINISHED - UNDER DEVELOPMENT
 */

public interface IDOLegacyEntity extends IDOEntity{

 static int STATE_NEW = 0;
 static int STATE_IN_SYNCH_WITH_DATASTORE = 1;
 static int STATE_NOT_IN_SYNCH_WITH_DATASTORE = 2;
 static int STATE_NEW_AND_NOT_IN_SYNCH_WITH_DATASTORE = 3;
 static int STATE_DELETED = 4;

 public void insert()throws java.sql.SQLException;
 public char getCharColumnValue(java.lang.String p0);
 public void setRelationShipClassName(java.lang.String p0,java.lang.String p1);
 public void addTreeRelationShip();
 public java.lang.Class getRelationShipClass(java.lang.String p0);
 public void addTo(com.idega.data.GenericEntity p0,java.lang.String p1,java.lang.String p2,java.lang.String p3,java.lang.String p4)throws java.sql.SQLException;
 public void addTo(com.idega.data.GenericEntity p0,java.lang.String p1,java.lang.String p2)throws java.sql.SQLException;
 public void addColumnName(java.lang.String p0,java.lang.String p1,boolean p2,boolean p3,java.lang.String p4);
 public boolean equals(com.idega.data.GenericEntity p0);
 public void setMetaDataAttributes(java.util.Hashtable p0);
 public void addTo(com.idega.data.GenericEntity p0)throws java.sql.SQLException;
 public void updateMetaData()throws java.sql.SQLException;
 public void addMetaData(java.lang.String p0,java.lang.String p1);
 public java.lang.String toString();
 public void insertStartData()throws java.lang.Exception;
 public java.lang.String getNameOfMiddleTable(com.idega.data.GenericEntity p0,com.idega.data.GenericEntity p1);
 public com.idega.data.GenericEntity[] findAllOrdered(java.lang.String p0)throws java.sql.SQLException;
 public boolean isPrimaryKey(java.lang.String p0);
 public void setColumn(java.lang.String p0,java.lang.Object p1);
 public void setColumn(java.lang.String p0,java.lang.Boolean p1);
 public boolean getIfNullable(java.lang.String p0);
 public void setName(java.lang.String p0);
 public void deleteMultiple(java.lang.String p0,java.lang.String p1)throws java.sql.SQLException;
 public void update()throws java.sql.SQLException;
 public boolean getIfVisible(java.lang.String p0);
 public java.lang.String getStringColumnValue(java.lang.String p0);
 public com.idega.data.GenericEntity[] findAssociatedOrdered(com.idega.data.GenericEntity p0,java.lang.String p1)throws java.sql.SQLException;
 public java.lang.String[] getEditableColumnNames();
 public void metaDataHasChanged(boolean p0);
 public com.idega.data.BlobWrapper getBlobColumnValue(java.lang.String p0);
 public java.util.Hashtable getMetaDataIds();
 public java.io.InputStream getInputStreamColumnValue(java.lang.String p0)throws java.lang.Exception;
 public void setStringColumn(java.lang.String p0,java.lang.String p1);
 public void removeFrom(com.idega.data.GenericEntity p0)throws java.sql.SQLException;
 public com.idega.data.GenericEntity[] findAll(java.lang.String p0,int p1)throws java.sql.SQLException;
 public void setID(java.lang.Integer p0);
 public void addTo(com.idega.data.GenericEntity p0,java.lang.String p1,java.lang.String p2,java.lang.String p3,java.lang.String p4,java.lang.String p5,java.lang.String p6)throws java.sql.SQLException;
 public void insertMetaData()throws java.sql.SQLException;
 public java.util.Vector getMetaDataUpdateVector();
 public boolean removeMetaData(java.lang.String p0);
 public java.util.Vector getMetaDataInsertVector();
 public java.sql.Connection getConnection()throws java.sql.SQLException;
 public int getNumberOfRecordsReverseRelated(com.idega.data.GenericEntity p0)throws java.sql.SQLException;
 public com.idega.data.GenericEntity[] findAllByColumnOrdered(java.lang.String p0,java.lang.String p1,java.lang.String p2)throws java.sql.SQLException;
 public int getStorageClassType(java.lang.String p0);
 public void setColumn(java.lang.String p0,java.io.InputStream p1);
 public void setMaxLength(java.lang.String p0,int p1);
 public com.idega.data.GenericEntity[] findAllByColumn(java.lang.String p0,java.lang.String p1,java.lang.String p2,java.lang.String p3)throws java.sql.SQLException;
 public com.idega.data.GenericEntity[] findAllByColumn(java.lang.String p0,java.lang.String p1,java.lang.String p2,java.lang.String p3,java.lang.String p4,java.lang.String p5)throws java.sql.SQLException;
 public void reverseRemoveFrom(com.idega.data.GenericEntity p0)throws java.sql.SQLException;
 public void freeConnection(java.sql.Connection p0);
 public java.lang.Integer getIDInteger();
 public void empty();
 public com.idega.data.GenericEntity[] findAllByColumnOrdered(java.lang.String p0,java.lang.String p1,java.lang.String p2,java.lang.String p3,java.lang.String p4)throws java.sql.SQLException;
 public void setDatasource(java.lang.String p0);
 public int getNumberOfRecords(java.lang.String p0,java.lang.String p1)throws java.sql.SQLException;
 public int getMaxColumnValue(java.lang.String p0)throws java.sql.SQLException;
 public float getFloatColumnValue(java.lang.String p0);
 public java.lang.String getName();
 public void setStorageClassType(java.lang.String p0,int p1);
 public com.idega.data.GenericEntity[] findReverseRelated(com.idega.data.GenericEntity p0)throws java.sql.SQLException;
 public com.idega.data.GenericEntity[] findAll(java.lang.String p0)throws java.sql.SQLException;
 public void setDefaultValues();
 public java.lang.String getStorageClassName(java.lang.String p0);
 public com.idega.data.GenericEntity[] findRelated(com.idega.data.GenericEntity p0)throws java.sql.SQLException;
 public void setColumn(java.lang.String p0,java.lang.Float p1);
 public void setColumn(java.lang.String p0,java.lang.Integer p1);
 public java.lang.Object getColumnValue(java.lang.String p0);
 public java.lang.String[] getColumnNames();
 public void setUnique(java.lang.String p0,boolean p1);
 public int getIntColumnValue(java.lang.String p0);
 public void delete()throws java.sql.SQLException;
 public com.idega.data.GenericEntity[] constructArray(java.lang.String[] p0);
 public boolean isInSynchWithDatastore();
 public int getMaxLength(java.lang.String p0);
 public void setStorageClassName(java.lang.String p0,java.lang.String p1);
 public com.idega.data.GenericEntity[] findAssociated(com.idega.data.GenericEntity p0)throws java.sql.SQLException;
 public int getNumberOfRecords(java.lang.String p0,java.lang.String p1,java.lang.String p2)throws java.sql.SQLException;
 public int getNumberOfRecords()throws java.sql.SQLException;
 public com.idega.data.GenericEntity[] findAll()throws java.sql.SQLException;
 public int getID();
 public void setColumn(java.lang.String p0,int p1);
 public boolean hasMetaDataRelationship();
 public com.idega.data.GenericEntity[] findAllDescendingOrdered(java.lang.String p0)throws java.sql.SQLException;
 public double getDoubleColumnValue(java.lang.String p0);
 public void setColumn(java.lang.String p0,float p1);
 public java.lang.String[] getVisibleColumnNames();
 public java.lang.String getIDColumnName();
 public void addTo(java.lang.Class p0,int p1)throws java.sql.SQLException;
 public void removeFromColumn(java.lang.String p0);
 public java.lang.String getRelationShipType(java.lang.String p0);
 public void setVisible(java.lang.String p0,boolean p1);
 public java.lang.String getEntityName();
 public com.idega.data.BlobWrapper getEmptyBlob(java.lang.String p0);
 public com.idega.data.GenericEntity[] findAllByColumn(java.lang.String p0,int p1)throws java.sql.SQLException;
 public com.idega.data.GenericEntity[] findAllByColumnDescendingOrdered(java.lang.String p0,java.lang.String p1,java.lang.String p2,java.lang.String p3,java.lang.String p4)throws java.sql.SQLException;
 public boolean getIfEditable(java.lang.String p0);
 public boolean getIfUnique(java.lang.String p0);
 public com.idega.data.GenericEntity[] constructArray(int[] p0);
 public java.util.Vector getMetaDataDeleteVector();
 public int getNumberOfRecords(java.lang.String p0)throws java.sql.SQLException;
 public java.lang.String getLongName(java.lang.String p0);
 public void setID(int p0);
 public void initializeAttributes();
 public void setLongName(java.lang.String p0,java.lang.String p1);
 public java.io.OutputStream getColumnOutputStream(java.lang.String p0);
 public java.sql.Connection getConnection(java.lang.String p0)throws java.sql.SQLException;
 public java.lang.String getLobColumnName();
 public java.lang.String getDatasource();
 public java.lang.Integer getIntegerColumnValue(java.lang.String p0);
 public boolean equals(java.lang.Object p0);
 public void setMetaData(java.lang.String p0,java.lang.String p1);
 public void removeFrom(com.idega.data.GenericEntity[] p0)throws java.sql.SQLException;
 public int getIntTableValue(java.lang.String p0)throws java.sql.SQLException;
 public void freeConnection(java.lang.String p0,java.sql.Connection p1);
 public void setRelationShipType(java.lang.String p0,java.lang.String p1);
 public com.idega.data.GenericEntity[] findAllByColumn(java.lang.String p0,java.lang.String p1)throws java.sql.SQLException;
 public void findByPrimaryKey(int p0)throws java.sql.SQLException;
 public void setColumn(java.lang.String p0,boolean p1);
 public void clear()throws java.sql.SQLException;
 public boolean metaDataHasChanged();
 public java.util.Hashtable getMetaDataAttributes();
 public java.lang.String getMetaData(java.lang.String p0);
 public void addTo(com.idega.data.GenericEntity p0,java.lang.String p1)throws java.sql.SQLException;
 public boolean isNull(java.lang.String p0);
 public com.idega.data.GenericEntity[] findAllByColumnDescendingOrdered(java.lang.String p0,java.lang.String p1,java.lang.String p2)throws java.sql.SQLException;
 public boolean getBooleanColumnValue(java.lang.String p0);
 public int getMaxColumnValue(java.lang.String p0,java.lang.String p1,java.lang.String p2)throws java.sql.SQLException;
 public void addTo(com.idega.data.GenericEntity p0,java.sql.Connection p1)throws java.sql.SQLException;
 public int getNumberOfRecordsRelated(com.idega.data.GenericEntity p0)throws java.sql.SQLException;
 public void setNullable(java.lang.String p0,boolean p1);
 public void deleteMetaData()throws java.sql.SQLException;
 public com.idega.data.EntityAttribute getColumn(java.lang.String p0);
 public boolean columnsHaveChanged();
 public void setToInsertStartData(boolean ifTrue);
 public boolean getIfInsertStartData();
 public String getTableName();
 public void setEntityState(int state);
 public java.util.Vector getAttributes();
}
